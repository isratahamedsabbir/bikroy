version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bikroy_app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - bikroy_net

  composer:
    image: composer:2
    container_name: bikroy_composer
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - bikroy_net
    command: [ "composer", "install", "--no-interaction", "--no-progress", "--no-scripts" ]

  nginx:
    image: nginx:alpine
    container_name: bikroy_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - bikroy_net

  node:
    image: node:18
    container_name: bikroy_node
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - bikroy_net
    command: [ "sh", "-c", "npm install && npm run build" ]

  db:
    image: mysql:8.0
    container_name: bikroy_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: bikroy_db
      MYSQL_ROOT_PASSWORD: your_root_password
      MYSQL_PASSWORD: your_password
      MYSQL_USER: bikroy_user
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - bikroy_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: bikroy_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: your_root_password
    networks:
      - bikroy_net

networks:
  bikroy_net:
    driver: bridge

volumes:
  dbdata:
    driver: local
    name: bikroy_dbdata

